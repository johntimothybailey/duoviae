// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Questions > Progress Component Render with a populated 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onLayout={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#E4E9F2",
          "borderRadius": 4,
          "borderWidth": 1,
          "flex": 0,
          "marginVertical": 24,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 8,
          "paddingTop": 4,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": undefined,
            "height": 0,
          }
        }
      />
      <View
        style={
          Object {
            "paddingHorizontal": 24,
            "paddingVertical": 16,
          }
        }
      >
        <View
          style={
            Object {
              "alignContent": "center",
              "alignItems": "center",
              "flex": 0,
              "flexDirection": "row",
              "flexWrap": "nowrap",
              "justifyContent": "space-between",
              "paddingBottom": 16,
            }
          }
        >
          <Text
            appearance="default"
            category="p1"
            style={
              Array [
                Object {
                  "color": "#222B45",
                  "fontFamily": "System",
                  "fontSize": 15,
                  "fontWeight": "400",
                },
                Object {},
              ]
            }
          >
            question
          </Text>
          <Text
            appearance="default"
            category="p1"
            style={
              Array [
                Object {
                  "color": "#222B45",
                  "fontFamily": "System",
                  "fontSize": 15,
                  "fontWeight": "400",
                },
                Object {},
              ]
            }
          >
            0
             / 
            2
          </Text>
        </View>
        <View
          animated={true}
          animationConfig={
            Object {
              "bounciness": 0,
            }
          }
          animationType="spring"
          indeterminate={false}
          indeterminateAnimationDuration={1000}
          onLayout={[Function]}
          progress={0}
          style={
            Array [
              Object {
                "backgroundColor": undefined,
                "borderColor": "#3366FF",
                "borderRadius": 4,
                "borderWidth": 1,
                "overflow": "hidden",
                "width": 200,
              },
              undefined,
            ]
          }
          useNativeDriver={false}
        >
          <View
            style={
              Object {
                "backgroundColor": "#3366FF",
                "height": 6,
                "transform": Array [
                  Object {
                    "translateX": -7.105427357601002e-15,
                  },
                  Object {
                    "translateX": -99,
                  },
                  Object {
                    "scaleX": 0.0001,
                  },
                ],
              }
            }
          />
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`Questions > Progress Component Render with a populated starting at second question 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onLayout={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#E4E9F2",
          "borderRadius": 4,
          "borderWidth": 1,
          "flex": 0,
          "marginVertical": 24,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 8,
          "paddingTop": 4,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": undefined,
            "height": 0,
          }
        }
      />
      <View
        style={
          Object {
            "paddingHorizontal": 24,
            "paddingVertical": 16,
          }
        }
      >
        <View
          style={
            Object {
              "alignContent": "center",
              "alignItems": "center",
              "flex": 0,
              "flexDirection": "row",
              "flexWrap": "nowrap",
              "justifyContent": "space-between",
              "paddingBottom": 16,
            }
          }
        >
          <Text
            appearance="default"
            category="p1"
            style={
              Array [
                Object {
                  "color": "#222B45",
                  "fontFamily": "System",
                  "fontSize": 15,
                  "fontWeight": "400",
                },
                Object {},
              ]
            }
          >
            question
          </Text>
          <Text
            appearance="default"
            category="p1"
            style={
              Array [
                Object {
                  "color": "#222B45",
                  "fontFamily": "System",
                  "fontSize": 15,
                  "fontWeight": "400",
                },
                Object {},
              ]
            }
          >
            1
             / 
            2
          </Text>
        </View>
        <View
          animated={true}
          animationConfig={
            Object {
              "bounciness": 0,
            }
          }
          animationType="spring"
          indeterminate={false}
          indeterminateAnimationDuration={1000}
          onLayout={[Function]}
          progress={0.5}
          style={
            Array [
              Object {
                "backgroundColor": undefined,
                "borderColor": "#3366FF",
                "borderRadius": 4,
                "borderWidth": 1,
                "overflow": "hidden",
                "width": 200,
              },
              undefined,
            ]
          }
          useNativeDriver={false}
        >
          <View
            style={
              Object {
                "backgroundColor": "#3366FF",
                "height": 6,
                "transform": Array [
                  Object {
                    "translateX": -7.105427357601002e-15,
                  },
                  Object {
                    "translateX": -49.5,
                  },
                  Object {
                    "scaleX": 0.50005,
                  },
                ],
              }
            }
          />
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;

exports[`Questions > Progress Component Render with an empty list 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onLayout={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#E4E9F2",
          "borderRadius": 4,
          "borderWidth": 1,
          "flex": 0,
          "marginVertical": 24,
          "opacity": 1,
          "overflow": "hidden",
          "paddingBottom": 8,
          "paddingTop": 4,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": undefined,
            "height": 0,
          }
        }
      />
      <View
        style={
          Object {
            "paddingHorizontal": 24,
            "paddingVertical": 16,
          }
        }
      >
        <View
          style={
            Object {
              "alignContent": "center",
              "alignItems": "center",
              "flex": 0,
              "flexDirection": "row",
              "flexWrap": "nowrap",
              "justifyContent": "space-between",
              "paddingBottom": 16,
            }
          }
        >
          <Text
            appearance="default"
            category="p1"
            style={
              Array [
                Object {
                  "color": "#222B45",
                  "fontFamily": "System",
                  "fontSize": 15,
                  "fontWeight": "400",
                },
                Object {},
              ]
            }
          >
            question
          </Text>
          <Text
            appearance="default"
            category="p1"
            style={
              Array [
                Object {
                  "color": "#222B45",
                  "fontFamily": "System",
                  "fontSize": 15,
                  "fontWeight": "400",
                },
                Object {},
              ]
            }
          >
            0
             / 
            0
          </Text>
        </View>
        <View
          animated={true}
          animationConfig={
            Object {
              "bounciness": 0,
            }
          }
          animationType="spring"
          indeterminate={false}
          indeterminateAnimationDuration={1000}
          onLayout={[Function]}
          progress={0}
          style={
            Array [
              Object {
                "backgroundColor": undefined,
                "borderColor": "#3366FF",
                "borderRadius": 4,
                "borderWidth": 1,
                "overflow": "hidden",
                "width": 200,
              },
              undefined,
            ]
          }
          useNativeDriver={false}
        >
          <View
            style={
              Object {
                "backgroundColor": "#3366FF",
                "height": 6,
                "transform": Array [
                  Object {
                    "translateX": -7.105427357601002e-15,
                  },
                  Object {
                    "translateX": -99,
                  },
                  Object {
                    "scaleX": 0.0001,
                  },
                ],
              }
            }
          />
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
